name: Build Kernel A14-6.1

on:
  workflow_call:
    inputs:
      make_release:
        required: false
        type: boolean
        default: false
      kernelsu_variant:
        required: true
        type: string
      kernelsu_branch:
        required: true
        type: string
      version:
        required: false
        type: string
      use_zram:
        required: true
        type: boolean
      use_bbg:
        required: true
        type: boolean
      use_kpm:
        required: true
        type: boolean
      onlyAk3:
        required: false
        type: boolean
      build_time:
        required: false
        type: string
      fix_compile_error:
        required: true
        type: boolean
        default: true

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Fix show_pad compilation error
        if: inputs.fix_compile_error
        run: |
          # 修复 task_mmu.c 中的 show_pad 标签错误
          FILE_PATH="common/fs/proc/task_mmu.c"
          if [ -f "$FILE_PATH" ]; then
            # 在 goto show_pad 附近添加 show_pad 标签定义
            sed -i '916a\show_pad:' "$FILE_PATH"
            # 或者注释掉有问题的 goto 语句
            # sed -i 's/goto show_pad;/\/\/ goto show_pad; \/\/ FIXED: Label not defined/' "$FILE_PATH"
            echo "Fixed show_pad compilation error in $FILE_PATH"
          else
            echo "Warning: $FILE_PATH not found"
          fi
          
      - name: Build with retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: |
            set -e
            set -x
            cd "$CONFIG"
            
            # 原有的配置修改
            sed -i 's/BUILD_SYSTEM_DLKM=1/BUILD_SYSTEM_DLKM=0/' ./common/build.config.gki.aarch64
            sed -i '/MODULES_ORDER=android\/gki_aarch64_modules/d' ./common/build.config.gki.aarch64
            sed -i '/KMI_SYMBOL_LIST_STRICT_MODE/d' ./common/build.config.gki.aarch64
            
            echo "Building the kernel..."
            if [ -f "build/build.sh" ]; then
              LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh CC="/usr/bin/ccache clang" || exit 1
            else
              tools/bazel build --disk_cache=/home/runner/.cache/bazel --config=fast --lto=thin //common:kernel_aarch64_dist || exit 1
              echo "debug:输出内核版本号"
              strings ./bazel-bin/common/kernel_aarch64/Image | grep 'Linux version'
            fi
